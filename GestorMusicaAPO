import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;

public class GestorMusicaApp extends JFrame {
    private GestorMusica gestor;

    public GestorMusicaApp() {
        gestor = new GestorMusica();
        setTitle("Gestor de Colecciones de Música");
        setSize(700, 500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JTabbedPane tabbedPane = new JTabbedPane();
        tabbedPane.addTab("Artistas", new PanelArtistas(gestor));
        tabbedPane.addTab("Canciones", new PanelCanciones(gestor));
        tabbedPane.addTab("Listas de Reproducción", new PanelListas(gestor));

        add(tabbedPane);
        setVisible(true);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(GestorMusicaApp::new);
    }
}

// Clase para gestionar los artistas
class PanelArtistas extends JPanel {
    private GestorMusica gestor;

    public PanelArtistas(GestorMusica gestor) {
        this.gestor = gestor;
        setLayout(new BorderLayout());

        DefaultListModel<Artista> modeloArtistas = new DefaultListModel<>();
        JList<Artista> listaArtistas = new JList<>(modeloArtistas);
        add(new JScrollPane(listaArtistas), BorderLayout.CENTER);

        JTextField nombreField = new JTextField(10);
        JTextField biografiaField = new JTextField(10);
        JButton btnAgregar = new JButton("Agregar Artista");

        btnAgregar.addActionListener((ActionEvent e) -> {
            String nombre = nombreField.getText();
            String biografia = biografiaField.getText();
            if (!nombre.isEmpty()) {
                Artista artista = new Artista(nombre, biografia);
                gestor.crearArtista(nombre, biografia);
                modeloArtistas.addElement(artista);
                nombreField.setText("");
                biografiaField.setText("");
            }
        });

        JPanel panelFormulario = new JPanel();
        panelFormulario.add(new JLabel("Nombre:"));
        panelFormulario.add(nombreField);
        panelFormulario.add(new JLabel("Biografía:"));
        panelFormulario.add(biografiaField);
        panelFormulario.add(btnAgregar);
        add(panelFormulario, BorderLayout.SOUTH);
    }
}

// Clase para gestionar las canciones
class PanelCanciones extends JPanel {
    private GestorMusica gestor;
    private DefaultListModel<Cancion> modeloCanciones;

    public PanelCanciones(GestorMusica gestor) {
        this.gestor = gestor;
        setLayout(new BorderLayout());

        modeloCanciones = new DefaultListModel<>();
        JList<Cancion> listaCanciones = new JList<>(modeloCanciones);
        add(new JScrollPane(listaCanciones), BorderLayout.CENTER);

        JTextField tituloField = new JTextField(10);
        JTextField duracionField = new JTextField(10);
        JTextField artistaField = new JTextField(10);
        JButton btnAgregar = new JButton("Agregar Canción");

        btnAgregar.addActionListener((ActionEvent e) -> {
            String titulo = tituloField.getText();
            String duracion = duracionField.getText();
            String nombreArtista = artistaField.getText();

            if (!titulo.isEmpty() && !nombreArtista.isEmpty() && !duracion.isEmpty()) {
                Artista artistaSeleccionado = gestor.getArtistas().stream()
                        .filter(artista -> artista.getNombre().equalsIgnoreCase(nombreArtista))
                        .findFirst()
                        .orElse(null);

                if (artistaSeleccionado == null) {
                    artistaSeleccionado = new Artista(nombreArtista, "");
                    gestor.crearArtista(nombreArtista, "");
                }

                Cancion nuevaCancion = new Cancion(titulo, duracion, artistaSeleccionado);
                gestor.crearCancion(titulo, duracion, artistaSeleccionado);
                modeloCanciones.addElement(nuevaCancion);
                tituloField.setText("");
                duracionField.setText("");
                artistaField.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.");
            }
        });

        JPanel panelFormulario = new JPanel();
        panelFormulario.add(new JLabel("Título:"));
        panelFormulario.add(tituloField);
        panelFormulario.add(new JLabel("Duración:"));
        panelFormulario.add(duracionField);
        panelFormulario.add(new JLabel("Artista:"));
        panelFormulario.add(artistaField);
        panelFormulario.add(btnAgregar);
        add(panelFormulario, BorderLayout.SOUTH);
    }
}

// Clase para gestionar las listas de reproducción
class PanelListas extends JPanel {
    private GestorMusica gestor;
    private DefaultListModel<ListaDeReproducción> modeloListas;

    public PanelListas(GestorMusica gestor) {
        this.gestor = gestor;
        setLayout(new BorderLayout());

        modeloListas = new DefaultListModel<>();
        JList<ListaDeReproducción> listaListas = new JList<>(modeloListas);
        add(new JScrollPane(listaListas), BorderLayout.CENTER);

        JTextField nombreField = new JTextField(10);
        JButton btnAgregarLista = new JButton("Crear Lista");

        btnAgregarLista.addActionListener((ActionEvent e) -> {
            String nombre = nombreField.getText();
            if (!nombre.isEmpty()) {
                ListaDeReproducción nuevaLista = new ListaDeReproducción(nombre);
                gestor.crearLista(nombre);
                modeloListas.addElement(nuevaLista);
                nombreField.setText("");
            }
        });

        JPanel panelFormulario = new JPanel();
        panelFormulario.add(new JLabel("Nombre de Lista:"));
        panelFormulario.add(nombreField);
        panelFormulario.add(btnAgregarLista);
        add(panelFormulario, BorderLayout.SOUTH);
    }
}

// Clase para representar un artista
class Artista {
    private String nombre;
    private String biografia;

    public Artista(String nombre, String biografia) {
        this.nombre = nombre;
        this.biografia = biografia;
    }

    public String getNombre() {
        return nombre;
    }

    public String getBiografia() {
        return biografia;
    }

    @Override
    public String toString() {
        return nombre;
    }
}

// Clase para representar una canción
class Cancion {
    private String titulo;
    private String duracion;
    private Artista artista;

    public Cancion(String titulo, String duracion, Artista artista) {
        this.titulo = titulo;
        this.duracion = duracion;
        this.artista = artista;
    }

    public String getTitulo() {
        return titulo;
    }

    public String getDuracion() {
        return duracion;
    }

    public Artista getArtista() {
        return artista;
    }

    @Override
    public String toString() {
        return titulo + " - " + artista.getNombre();
    }
}

// Clase para representar una lista de reproducción
class ListaDeReproducción {
    private String nombre;
    private List<Cancion> canciones;

    public ListaDeReproducción(String nombre) {
        this.nombre = nombre;
        this.canciones = new ArrayList<>();
    }

    public void agregarCancion(Cancion cancion) {
        canciones.add(cancion);
    }

    public String getNombre() {
        return nombre;
    }

    public List<Cancion> getCanciones() {
        return canciones;
    }

    @Override
    public String toString() {
        return nombre;
    }
}

// Clase para gestionar la música
class GestorMusica {
    private List<ListaDeReproducción> listas;
    private List<Artista> artistas;
    private List<Cancion> canciones;

    public GestorMusica() {
        listas = new ArrayList<>();
        artistas = new ArrayList<>();
        canciones = new ArrayList<>();
    }

    public void crearLista(String nombre) {
        listas.add(new ListaDeReproducción(nombre));
    }

    public void crearArtista(String nombre, String biografia) {
        artistas.add(new Artista(nombre, biografia));
    }

    public void crearCancion(String titulo, String duracion, Artista artista) {
        Cancion nuevaCancion = new Cancion(titulo, duracion, artista);
        canciones.add(nuevaCancion);
    }

    public List<ListaDeReproducción> getListas() {
        return listas;
    }

    public List<Artista> getArtistas() {
        return artistas;
    }

    public List<Cancion> getCanciones() {
        return canciones;
    }
}
